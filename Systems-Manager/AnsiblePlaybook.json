{
    "schemaVersion": "2.2",
    "description": "Execute scripts stored in a remote location. The following remote locations are currently supported: GitHub (public and private) and Amazon S3 (S3). The following script types are currently supported: #! support on Linux and file associations on Windows.",
    "parameters": {
      "sourceType": {
        "description": "(Required) Specify the source type.",
        "type": "String",
        "allowedValues": [
          "GitHub",
          "S3"
        ],
        "default": "GitHub"
      },
      "sourceInfo": {
        "description": "(Required) Specify the information required to access the resource from the source. If source type is GitHub, then you can specify any of the following: 'owner', 'repository', 'path', 'getOptions', 'tokenInfo'. If source type is S3, then you can specify 'path'.",
        "type": "StringMap",
        "displayType": "textarea",
        "default": {
          "owner": "VaidheeswaranSrinivasan",
          "repository": "thoughtworks-project"
        }
      },
      "extravars": {
        "type": "String",
        "description": "(Optional) Additional variables to pass to Ansible at runtime. Enter a space separated list of key/value pairs. For example: color=red flavor=lime",
        "default": "SSM=True",
        "displayType": "textarea",
        "allowedPattern": "^$|^\\w+\\=\\w+(\\s\\w+\\=[\\w.\\-]+)*$"
      },
      "tags": {
        "type": "String",
        "description": "(Optional) Tag names to pass to Ansible at runtime. Enter a comma separated list of values",
        "default": "all",
        "displayType": "textarea"
      },
      "check": {
        "type": "String",
        "description": " (Optional) Use the check parameter to perform a dry run of the Ansible execution.",
        "allowedValues": [
          "True",
          "False"
        ],
        "default": "False"
      },
      "workingDirectory": {
        "type": "String",
        "default": "",
        "description": "(Optional) The path where the content will be downloaded and executed from on your instance.",
        "maxChars": 4096
      },
      "executionTimeout": {
        "description": "(Optional) The time in seconds for a command to complete before it is considered to have failed. Default is 3600 (1 hour). Maximum is 28800 (8 hours).",
        "type": "String",
        "default": "3600",
        "allowedPattern": "([1-9][0-9]{0,3})|(1[0-9]{1,4})|(2[0-7][0-9]{1,3})|(28[0-7][0-9]{1,2})|(28800)"
      }
    },
    "mainSteps": [
      {
        "action": "aws:downloadContent",
        "name": "downloadContent",
        "inputs": {
          "sourceType": "{{ sourceType }}",
          "sourceInfo": "{{ sourceInfo }}",
          "destinationPath": "{{ workingDirectory }}"
        }
      },
      {
        "precondition": {
          "StringEquals": [
            "platformType",
            "Linux"
          ]
        },
        "action": "aws:runShellScript",
        "name": "runShellScript",
        "inputs": {
          "runCommand": [
            "#!/bin/bash",
            "ansible --version",
            "if [ $? -ne 0 ]; then",
            " echo \"Ansible is not installed. Please install Ansible and rerun the command\" >&2",
            " exit 1",
            "fi",
            "if  [[ \"{{check}}\" == True ]] ; then",
            "   ansible-playbook -i \"localhost,\" --check -c local -e \"{{extravars}}\" playbook.yml --tags \"{{tags}}\" ",
            "else",
            "   ansible-playbook -i \"localhost,\" -c local -e \"{{extravars}}\" playbook.yml --tags \"{{tags}}\" ",
            "fi"
          ],
          "workingDirectory": "{{ workingDirectory }}",
          "timeoutSeconds": "{{ executionTimeout }}"
        }
      }
    ]
  }